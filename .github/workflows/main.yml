name: Build & Deploy
on:
  push:
    branches:
    - main
  # manual trigger
  workflow_dispatch:
jobs:
  pin:
    runs-on: ubuntu-latest
    name: Build and Pin to IPFS
    outputs:
      hash: ${{ steps.pin.outputs.hash }}
    steps:
      - uses: actions/checkout@v3
      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - uses: actions/cache@v3
        id: install-cache
        with:
          path: node_modules/
          key: ${{ runner.os }}-install-${{ hashFiles('**/yarn.lock') }}
      - if: steps.install-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --ignore-scripts
        shell: bash
      # Add env variables to .env file which will be loaded by nextjs
      - name: Create .env file
        run: |
          touch .env
          echo NEXT_PUBLIC_CHAIN=${{ vars.CHAIN }} >> .env
          echo NEXT_PUBLIC_SUBGRAPH_URI=${{ vars.SUBGRAPH_URI }} >> .env
          echo NEXT_PUBLIC_VERIFIER_URI=${{ vars.VERIFIER_URI }} >> .env
          echo NEXT_PUBLIC_ENVIRONMENT=${{ vars.ENVIRONMENT }} >> .env
          echo NEXT_PUBLIC_DISCORD_CLIENT_ID=${{ vars.DISCORD_CLIENT_ID }} >> .env
          echo NEXT_PUBLIC_TWITTER_CLIENT_ID=${{ vars.TWITTER_CLIENT_ID }} >> .env
      - run: yarn build
      - name: Pin to IPFS
        id: pin
        uses: aquiladev/ipfs-action@master
        with:
          path: ./out
          service: infura
          infuraProjectId: ${{ secrets.INFURA_PROJECT_ID }}
          infuraProjectSecret: ${{ secrets.INFURA_PROJECT_SECRET }}
      - run: echo "IPFS hash ${{ steps.pin.outputs.hash }}"
  release:
    if: github.repository == 'helix-foundation/eco-id-app'
    runs-on: ubuntu-latest
    name: Bump, Tag and Release
    needs: pin
    steps:
      - uses: actions/checkout@v3
      - name: Bump and Tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: patch
      - name: Create Release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          body: |
            IPFS hash of the deployment:
            - CIDv0: `${{ needs.pin.outputs.hash }}`
            ${{ steps.tag.outputs.changelog }}
  dnslink:
    runs-on: ubuntu-latest
    name: Update DNSLink Record
    needs: pin
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - run: sed -i -e 's/<domain>/${{ secrets.DOMAIN_NAME }}/g' -e 's/<hash>/${{ needs.pin.outputs.hash }}/g' ./.github/assets/upsert-dns.json
    - run: aws route53 change-resource-record-sets --hosted-zone-id ${{ secrets.AWS_HOSTED_ZONE_ID }} --change-batch file://./.github/assets/upsert-dns.json
